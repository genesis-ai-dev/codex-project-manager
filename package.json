{
  "name": "codex-project-manager",
  "displayName": "Codex Project Manager",
  "description": "An extension to help users initialize different types of Bible translation projects.",
  "author": {
    "name": "Ryder Wishart and Ben Scholtens"
  },
  "version": "0.0.2",
  "publisher": "project-accelerate",
  "homepage": "https://codex-editor.gitbook.io/",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/genesis-ai-dev/codex-project-manager"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codex-project-manager.initializeNewProject",
        "title": "Initialize New Project",
        "category": "Codex Project Management"
      },
      {
        "command": "codex-project-manager.nameProject",
        "title": "Name Project",
        "category": "Codex Project Management"
      },
      {
        "command": "codex-project-manager.openProjectSettings",
        "title": "Open Project Settings",
        "category": "Codex Project Management"
      },
      {
        "command": "codex-project-manager.startWalkthrough",
        "title": "Start Walkthrough",
        "category": "Codex Project Management"
      },
      {
        "command": "codex-project-manager.startTranslating",
        "title": "Start Translating",
        "category": "Codex Project Management"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "codex-project-manager.welcomeView",
          "name": "Codex Project Manager",
          "when": "workbenchState == empty"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "setupLocalEnvironment",
        "title": "Set up Translator's Copilot",
        "description": "A simple walkthrough to help you set up a large language model on your device to benefit from the Copilot feature.",
        "steps": [
          {
            "id": "downloadLMStudio",
            "title": "Download LM Studio",
            "description": "Download LM Studio to get a local LLM running to power your Translator's Copilot.\n\n[Download LM Studio](https://lmstudio.ai)",
            "media": {
              "image": "./src/media/lmstudio.gif",
              "altText": "LM Studio"
            }
          }
        ]
      },
      {
        "id": "codexWalkthrough",
        "title": "Start a Codex Project",
        "description": "A simple walkthrough to help you start a new Codex translation project.",
        "steps": [
          {
            "id": "openFolder",
            "title": "Open Project Folder",
            "description": "First, let's open a folder where your new Codex project will be initialized.\n[Open Project Folder](command:workbench.action.files.openFolder)",
            "media": {
              "image": "./src/media/folder-active.png",
              "altText": "Open Project Folder"
            },
            "completionEvents": [
              "onFolderSelected"
            ]
          },
          {
            "id": "projectName",
            "title": "Name Project",
            "description": "Now that we have a folder, let's name your new Codex project.\n[Name Project](command:codex-project-manager.nameProject)",
            "media": {
              "image": "./src/media/name-project.png",
              "altText": "Name Project"
            },
            "completionEvents": [
              "onCommand:codex-project-manager.nameProject"
            ]
          },
          {
            "id": "userName",
            "title": "Set User Name",
            "description": "Now that we have a Project name, let's set the user name for your new Codex project.\n[Set User Name](command:codex-project-manager.userName)",
            "media": {
              "image": "./src/media/user-name.png",
              "altText": "Set User Name"
            },
            "completionEvents": [
              "onCommand:codex-project-manager.userName"
            ]
          },
          {
            "id": "setSourceAndTargetLanguage",
            "title": "Set Source And Target Language",
            "description": "Now that we have a folder, let's initialize your new Codex project.\n[Select Language](command:codex-project-manager.setSourceAndTargetLanguage)",
            "media": {
              "image": "./src/media/source-and-target.png",
              "altText": "Select Language"
            },
            "completionEvents": [
              "onCommand:codex-project-manager.setSourceAndTargetLanguage"
            ]
          },
          {
            "id": "initializeProject",
            "title": "Create files",
            "description": "Now that we have a folder, let's initialize your new Codex project.\n[Initialize Project](command:codex-project-manager.initializeNewProject)\n or \n [Import USFM Project](command:codex-project-manager.initializeImportProject)",
            "media": {
              "image": "./src/media/initialize-project.png",
              "altText": "Initialize Project"
            },
            "completionEvents": [
              "onCommand:codex-project-manager.initializeNewProject"
            ]
          },
          {
            "id": "startTranslating",
            "title": "Start Translating",
            "description": "Now that we've initialized all these files, let's start translating your new Codex project.\n[Start Translating](command:codex-project-manager.startTranslating)",
            "media": {
              "image": "./src/media/edit.png",
              "altText": "Start Translating"
            },
            "completionEvents": [
              "onCommand:codex-project-manager.startTranslating"
            ]
          }
        ]
      }
    ],
    "configuration": {
      "title": "Codex Project Manager",
      "properties": {
        "codex-project-manager.projectName": {
          "type": "string",
          "default": "",
          "description": "Name of the project"
        },
        "codex-project-manager.projectCategory": {
          "type": "string",
          "default": "",
          "description": "Category of the project",
          "enum": [
            "Scripture",
            "Gloss",
            "Parascriptural",
            "Peripheral"
          ],
          "enumDescriptions": [
            "Projects focused on scripture texts.",
            "Projects focused on glossaries or dictionaries.",
            "Projects related to parascriptural materials.",
            "Projects dealing with peripheral or supplementary materials."
          ]
        },
        "codex-project-manager.userName": {
          "type": "string",
          "default": "",
          "description": "Name of the user"
        },
        "codex-project-manager.abbreviation": {
          "type": "string",
          "default": "",
          "description": "Project abbreviation"
        },
        "codex-project-manager.sourceLanguage": {
          "type": "object",
          "default": {},
          "description": "Source language for the project"
        },
        "codex-project-manager.targetLanguage": {
          "type": "object",
          "default": {},
          "description": "Target language for the project"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "@vscode/test-electron": "^2.3.6",
    "eslint": "^8.52.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "ts-loader": "^9.5.0",
    "typescript": "^5.2.2",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "codex-types": "^0.0.2",
    "usfm-grammar": "^2.3.1"
  },
  "extensionDependencies": [
    "project-accelerate.codex-editor-extension"
  ]
}
